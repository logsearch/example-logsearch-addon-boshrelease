#!/bin/bash -x

set -e

<%
# Look ma, I'm writing Chef
def put_to_es(url_stem_base, es_config)
  ret = []
  es_config.each do |config|
    if config.is_a? Hash
      ckey, content = config.to_a.first
    else
      ckey = ''
      content = config
    end
    url_stem = "#{url_stem_base}/#{ckey}".chomp('/')
    ret << "URL=http://#{p('bulk_request.elasticsearch.host')}:#{p('bulk_request.elasticsearch.port')}/#{url_stem}"
    if nil == content
     ret << 'curl -X DELETE "${URL}"'
    else
      if content.start_with? '/var/vcap'
        ret << "CONTENT_PATH=\"#{content}\""
      else
        ret << <<BASH
CONTENT_PATH=/tmp/bulk_request-http_body.txt
cat <<EOF > $CONTENT_PATH
#{content}
EOF
BASH
      end

      ret << <<BASH
HTTP_CODE=$(curl -s -w '%{http_code}' -o /tmp/bulk_request-response.txt -X PUT --data-binary @$CONTENT_PATH "$URL")

if grep --quiet "\"errors\":true" /tmp/bulk_request-response.txt ; then
  cat /tmp/bulk_request-response.txt > /dev/stderr
  exit 1
fi

if [ "$HTTP_CODE" -le "300" ]; then
  cat /tmp/bulk_request-response.txt
else
  cat /tmp/bulk_request-response.txt > /dev/stderr
  exit $HTTP_CODE
fi
BASH
    end
  end #loop
  ret.join("\n")
end
%>

#
# wait for elasticsearch availability
#

READY=false

while [ "false" == "$READY" ] ; do
    STATUS=$(curl -s http://<%= p("bulk_request.elasticsearch.host") %>:<%= p("bulk_request.elasticsearch.port") %>'/_cat/health?h=status' | tr -d '[:space:]')

    if [ "green" == "$STATUS" ] || [ "yellow" == "$STATUS" ] ; then
        READY=true
    else
        sleep 1
    fi
done

#
# bulk files
#
<%= put_to_es('_bulk', p('bulk_request.bulk_data_files')) %>
